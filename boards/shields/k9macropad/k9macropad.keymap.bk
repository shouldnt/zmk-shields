/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
	behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };
	/* behaviors {
        ctrl_c_z: ctrl_c_ctrl_z {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LGUI(C)>, <&kp Z>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };
    }; */
	combos {
		compatible = "zmk,combos";
		combo_esc_1 {
			timeout-ms = <50>;
			key-positions = <0 1 2>;
			bindings = <&kp ESC>;
		};
		combo_esc_2 {
			timeout-ms = <50>;
			key-positions = <2 5 8>;
			bindings = <&kp ESC>;
		};
		combo_sys_reset {
			timeout-ms = <50>;
			key-positions = <6 7 8>;
			bindings = <&sys_reset>;
		};
		combo_ctrl_s {
			timeout-ms = <50>;
			key-positions = <0 1>;
			bindings = <&kp LG(S)>;
		};
	};
	macros {
		alttab: alttab {
			compatible = "zmk,behavior-macro-one-param";
			wait-ms = <0>;
			tap-ms = <0>;
			#binding-cells = <1>;
			bindings
				= <&macro_press &mo 1 &kp LGUI>
				, <&macro_param_1to1>
				, <&macro_press &mo MACRO_PLACEHOLDER>
				, <&macro_tap &kp TAB>
				, <&macro_pause_for_release>
				, <&macro_param_1to1>
				, <&macro_release &mo MACRO_PLACEHOLDER>
				, <&macro_release &kp LGUI>
				;
		};
	};
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
				&mt LGUI LGUI(A) &ht A B &kp LC(V)
				&alttab &alttab LSHIFT &kp LG(V)
				&kp LC(GRAVE) &kp LC(P) &kp F12
            >;
        };
        trigger_layer {
            bindings = <
				&kp LCTRL &kp Z &kp F3
				&kp TAB &kp TAB &kp F6
				&kp F7 &kp F8 &kp LSHIFT
            >;
        };
        num_layer {
            bindings = <
				&kp N1 &kp N2 &kp N3
				&kp N4 &kp N5 &kp N6
				&kp N7 &kp N8 &kp N9
            >;
        };
    };
};
